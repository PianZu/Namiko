// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;


namespace Namiko.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20181010145435_welcomesandwaifus")]
    partial class welcomesandwaifus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("Namiko.Daily", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Date");

                    b.Property<int>("Streak");

                    b.HasKey("UserId");

                    b.ToTable("Dailies");
                });

            modelBuilder.Entity("Namiko.Invite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("TeamId");

                    b.Property<ulong>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Invites");
                });

            modelBuilder.Entity("Namiko.PublicRole", b =>
                {
                    b.Property<ulong>("RoleId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("RoleId");

                    b.ToTable("PublicRoles");
                });

            modelBuilder.Entity("Namiko.ReactionImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Namiko.ShopRole", b =>
                {
                    b.Property<ulong>("RoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DaysLength");

                    b.Property<ulong>("GuildId");

                    b.Property<ulong>("IfLimitedUserId");

                    b.Property<int>("Price");

                    b.HasKey("RoleId");

                    b.ToTable("ShopRoles");
                });

            modelBuilder.Entity("Namiko.ShopWaifu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("BoughtBy");

                    b.Property<int>("Discount");

                    b.Property<DateTime>("GeneratedDate");

                    b.Property<int>("Limited");

                    b.Property<string>("WaifuName");

                    b.HasKey("Id");

                    b.HasIndex("WaifuName");

                    b.ToTable("WaifuStores");
                });

            modelBuilder.Entity("Namiko.Team", b =>
                {
                    b.Property<ulong>("LeaderRoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("MemberRoleId");

                    b.HasKey("LeaderRoleId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Namiko.Toastie", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.HasKey("UserId");

                    b.ToTable("Toasties");
                });

            modelBuilder.Entity("Namiko.UserInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateBought");

                    b.Property<ulong>("UserId");

                    b.Property<string>("WaifuName");

                    b.HasKey("Id");

                    b.HasIndex("WaifuName");

                    b.ToTable("UserInventories");
                });

            modelBuilder.Entity("Namiko.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateToRemoveOn");

                    b.Property<ulong>("RoleId");

                    b.Property<ulong>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ShopItems");
                });

            modelBuilder.Entity("Namiko.Waifu", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("AddedByUserId");

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("LongName");

                    b.Property<string>("Source");

                    b.Property<int>("Tier");

                    b.Property<int>("TimesBought");

                    b.HasKey("Name");

                    b.ToTable("Waifus");
                });

            modelBuilder.Entity("Namiko.WelcomeChannel", b =>
                {
                    b.Property<ulong>("GuildId")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("ChannelId");

                    b.HasKey("GuildId");

                    b.ToTable("WelcomeChannels");
                });

            modelBuilder.Entity("Namiko.WelcomeMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Message");

                    b.HasKey("Id");

                    b.ToTable("WelcomeMessages");
                });

            modelBuilder.Entity("Namiko.ShopWaifu", b =>
                {
                    b.HasOne("Namiko.Waifu", "Waifu")
                        .WithMany()
                        .HasForeignKey("WaifuName");
                });

            modelBuilder.Entity("Namiko.UserInventory", b =>
                {
                    b.HasOne("Namiko.Waifu", "Waifu")
                        .WithMany()
                        .HasForeignKey("WaifuName");
                });
#pragma warning restore 612, 618
        }
    }
}
